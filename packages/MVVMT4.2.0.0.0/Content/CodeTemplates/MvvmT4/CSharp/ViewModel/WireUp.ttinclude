<#+
    // <copyright file="ViewModelWireUp.tt" company="CompDJ">
    //  Copyright © CompDJ. All Rights Reserved.
    // </copyright>

    public class ViewModelWireUp : Template
    {
        public override string TransformText()
        {
#>
// -----------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by MVVMT4 v<#=Config.Version#>. 
//     http://mvvmt4.codeplex.com/
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     NOTE: This code will probably not work unless it's moved out of the 
//           generated folder.
// </auto-generated>
// -----------------------------------------------------------------------------

        //------------------------------------------------------------------------------
        // This is the code needed inside the view model locator to wire up 
        // the <#=Config.Name#> view model.
        //------------------------------------------------------------------------------

        // In the view model locator constructor, add the following code:
        Create<#=Config.Name#>();

        // In the view model locator cleanup method, add the following code:
        Clear<#=Config.Name#>();

        // The rest of the code below should be moved to the view model locator.

        /// <summary>Static backing field for the <#=Config.Name#> view model.</summary>
        private static <#=Config.Name#>ViewModel field<#=Config.Name#>;

        /// <summary>Gets the <#=Config.Name#> property (shared).</summary>
        public static <#=Config.Name#>ViewModel <#=Config.Name#>Static
        {
            get
            {
                if (field<#=Config.Name#> == null)
                {
                    Create<#=Config.Name#>();
                }

                return field<#=Config.Name#>;
            }
        }

        /// <summary>
        /// Gets the <#=Config.Name#> property.
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage(
            "Microsoft.Performance", 
            "CA1822:MarkMembersAsStatic", 
            Justification = "This non-static member is needed for data binding purposes.")]
        public <#=Config.Name#>ViewModel <#=Config.Name#>
        {
            get { return <#=Config.Name#>Static; }
        }

        /// <summary>
        /// Provides a deterministic way to delete the <#=Config.Name#> property.
        /// </summary>
        public static void Clear<#=Config.Name#>()
        {
            if (field<#=Config.Name#> != null)
            {
                field<#=Config.Name#>.Cleanup();
                field<#=Config.Name#> = null;
            }
        }

        /// <summary>
        /// Provides a deterministic way to create the <#=Config.Name#> property.
        /// </summary>
        /// <remarks></remarks>
        public static void Create<#=Config.Name#>()
        {
            if (field<#=Config.Name#> == null)
            {
                field<#=Config.Name#> = new <#=Config.Name#>ViewModel();
            }
        }
<#+
            return this.GenerationEnvironment.ToString();
        }
    }
#>
